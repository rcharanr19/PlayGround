# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: MuleSoft deployment with GitHub Actions CI

on:
  push:
    branches: [ master ]
  pull:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    – uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles(‘**/pom.xml’) }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Artifact file name with commit hash
    run: |
      artifactName1=$(ls target/*.jar | head -1)
      commitHash=$(git rev-parse –short “$GITHUB_SHA”)
      artifactName2=$(ls target/*.jar | head -1 | sed “s/.jar/.$commitHash.jar/g”)
      mv $artifactName1 $artifactName2
      
    – uses: actions/upload-artifact@master
    with:
      name: artifacts
      path: target/*.jar
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    – uses: actions/checkout@v2
    – uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles(‘**/pom.xml’) }}
        restore-keys: |
          ${{ runner.os }}-maven-
    – uses: actions/download-artifact@master
      with:
        name: artifacts
        
    – name: Deploy to Anypoint Platform
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
        PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
        run:	|
          artifactName=$(ls *.jar | head -1)
          mvn mule:deploy -Dmule.artifact=$artifactName -Dusername=$USERNAME -Dpassword=$PASSWORD
